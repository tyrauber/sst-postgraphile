# serverless.yml
# AWS Serverless.yml Reference
# For further customization, see:
# https://www.serverless.com/framework/docs/providers/aws/guide/serverless.yml/

# $ serverless deploy --settings scalable.technology.yml --stage dev --aws-profile default
service: ${self:custom.settings.serviceName}

provider:
  name: aws
  runtime: nodejs10.x
  stage: ${opt:stage, 'dev'}
  region: ${self:custom.settings.region, 'us-east-1'}
  memorySize: ${self:custom.settings.memory, '512'}
  reservedConcurrency: ${self:custom.settings.concurrency, '5'}
  timeout: ${self:custom.settings.timeout, '6'}
  #logRetentionInDays: ${self:custom.settings.log_retention, '7'}

frameworkVersion: '>=1.0.0 <2.0.0'

resources:
  Conditions:
    CustomDomain: !Not [!Equals ["${self:custom.settings.environment.CUSTOM_DOMAIN, ''}", ""]]
    ArnCertificate: !Not [!Equals ["${self:custom.settings.environment.ACM_CERTIFICATE_ARN, ''}", ""]]
    CreateCertificate: !And
      - !Not [!Equals ["${self:custom.settings.environment.CUSTOM_DOMAIN, ''}", ""]]
      - !Equals ["${self:custom.settings.environment.ACM_CERTIFICATE_ARN, ''}", ""]
  Resources:
    CloudFrontDistribution:
      Type: AWS::CloudFront::Distribution
      Properties:
        DistributionConfig:
          Comment: Cloudfront distribution for serverless image handler
          DefaultCacheBehavior:
            TargetOriginId: ApiGateway
            AllowedMethods: ['GET', 'HEAD', 'OPTIONS', 'PUT', 'PATCH', 'POST', 'DELETE']
            ViewerProtocolPolicy: 'redirect-to-https'
            DefaultTTL: 30
            ForwardedValues:
              Headers:
                - 'Accept'
              QueryString: true
          Enabled: true
          Origins:
            - Id: ApiGateway
              DomainName:
                Fn::Join:
                  - "."
                  - - Ref: ApiGatewayRestApi
                    - execute-api.${self:custom.settings.region}.amazonaws.com
              OriginPath: "/${self:provider.stage}"
              CustomOriginConfig:
                HTTPPort: 80
                HTTPSPort: 443
                OriginProtocolPolicy: https-only
          Aliases:
            Fn::If:
            - CustomDomain
            - - '${self:custom.settings.environment.CUSTOM_DOMAIN, self:custom.empty}'
            - Ref: AWS::NoValue
          ViewerCertificate:
            Fn::If:
            - CreateCertificate
            - AcmCertificateArn: !If
              - ArnCertificate
              - self:custom.settings.environment.ACM_CERTIFICATE_ARN
              - Ref: Certificate
              SslSupportMethod: 'sni-only'
              MinimumProtocolVersion: 'TLSv1'
            - Ref: AWS::NoValue
    Certificate:
      Type: AWS::CertificateManager::Certificate
      Condition: CreateCertificate
      Properties:
        ValidationMethod: DNS
        DomainName: '${self:custom.settings.environment.CUSTOM_DOMAIN}'
functions:
  index:
    handler: './handler.handler'
    events:
      - http:
          path: /
          method: POST
      - http: ANY /
      - http: ANY /{proxy+}
    package:
      individually: true
      excludeDevDependencies: true
      browser: false
      exclude:
        #- node_modules/**
        - docs/**
        - .idea/**
        - bin/darwin/**
        - coverage/**
    environment: ${self:custom.settings.environment}

Outputs:
  CloudFrontDistributionOutput:
    Value:
      'Fn::GetAtt': [ CloudFrontDistribution, DomainName ]

custom:
  s3Sync:
    - bucketName: "${self:custom.settings.environment.S3_BUCKET, ''}"
      bucketPrefix: public
      localDir: ./public
      acl: public-read
  webpack:
    webpackConfig: 'webpack.serverless.js'
    includeModules:
      forceExclude:
        - clean-webpack-plugin
        - copy-webpack-plugin
        - html-webpack-plugin
        - koa-webpack-dev-middleware
        - koa-webpack-hot-middleware
        - mini-css-extract-plugin
        - optimize-css-assets-webpack-plugin
        - serverless-webpack
        - terser-webpack-plugin
        - vue-loader
        - webpack-merge
        - webpack-node-externals
        - mssql
        - mysql
        - mysql2
        - sqlite3
        - webpack
      forceInclude:
        - deepmerge
        - vuex-persistedstate
        - secure-ls
        - vue
        - node-fetch

  empty: ''
  settingsFilePath: ${opt:settings,'./settings.yml'}
  settings: ${file(${self:custom.settingsFilePath}):stages.${self:provider.stage}}
  prune:
    automatic: true
    number: 3
  apigwBinary:
    types:
      - '*/*'

plugins:
  - serverless-webpack
  - serverless-offline
  - serverless-s3-sync
  - serverless-apigw-binary
  - serverless-apigwy-binary
  #- serverless-dotenv-plugin
  # - serverless-pwa-plugin
